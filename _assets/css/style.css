@charset "UTF-8";


/*-----------------------------------*\

  Root: style.scss

  Imports all required SCSS files.

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: variables

  Global variables of all kinds

\*-----------------------------------*/

/*-----------------------------------*\

  Module: base

  High-level styles. Basically just
  the html/:root element.

\*-----------------------------------*/

html,
:root {
  font: 125%/1.4 "Hoefler Text A", "Hoefler Text B", Georgia, serif;
}

/*-----------------------------------*\

  Partial: all

  Imports all abstracted components
  and helpers

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: variables

  Global variables of all kinds

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: mixins

  Site-wide mixin definitions

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: reset

  An overzealous CSS reset

\*-----------------------------------*/

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
}

img {
  max-width: 100%;
}

ul,
ol {
  padding-left: 1.4em;
}

header,
main,
footer,
p,
table,
figure,
blockquote,
pre,
ul,
ol,
h1,
.alpha,
h2,
.beta {
  margin-bottom: 28px;
  margin-bottom: 1.4rem;
}

/*-----------------------------------*\

  Partial: helpers

  Helper classes for allsorts

\*-----------------------------------*/

.o--b {
  display: block;
}

.o--p {
  margin-bottom: 28px;
  margin-bottom: 1.4rem;
}

.o--mz {
  margin-bottom: 0;
}

.unl {
  padding-left: 0;
  list-style: none;
}

/*-----------------------------------*\

  Partial: layout

  Layout rules

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: grid

  Powerful grid derived from Toast.
  You'd be mad to use it.

  Usage
  =====

  Assuming default values:

  <div class="grid">
    <div class="grid__col grid__col--1-of-2">
      A half-width column.
    </div>
    <div class="grid__col grid__col--1-of-4 grid__col--pull-1-of-4">
      A quarter, pulled left by its own width. You get this, right?
    </div>
  </div>


  Customisation
  =============

  $grid-namespace and $grid-column-namespace
  adjusts the class names for the grid. With
  default values, grid wrappers have a class
  of '.grid' and columns '.grid__col'.

  $col-groups(n) adjusts column divisions.
  For example, $col-groups(12) will produce
  a 12-column grid. $col-groups(3,6,8)
  will produce a 3-, 6-, and 8-column grid.

  $gutter-width is—you guessed it—the gutter
  width. Accepts any unit.

  That's it. Have fun.

\*-----------------------------------*/

.grid {
  list-style: none;
  margin-left: -20px;
}

.grid > .grid__col--6-of-6 {
  width: 100%;
}

.grid > .grid__col--3-of-6 {
  width: 50%;
}

.grid > .grid__col--2-of-6 {
  width: 33.33333%;
}

.grid > .grid__col--4-of-6 {
  width: 66.66667%;
}

.grid > .grid__col--push-6-of-6 {
  margin-left: 100%;
}

.grid > .grid__col--push-3-of-6 {
  margin-left: 50%;
}

.grid > .grid__col--push-2-of-6 {
  margin-left: 33.33333%;
}

.grid > .grid__col--push-4-of-6 {
  margin-left: 66.66667%;
}

.grid > .grid__col--pull-6-of-6 {
  margin-left: -100%;
}

.grid > .grid__col--pull-3-of-6 {
  margin-left: -50%;
}

.grid > .grid__col--pull-2-of-6 {
  margin-left: -33.33333%;
}

.grid > .grid__col--pull-4-of-6 {
  margin-left: -66.66667%;
}

.grid > .grid__col--1-of-6 {
  width: 16.66667%;
}

.grid > .grid__col--push-1-of-6 {
  margin-left: 16.66667%;
}

.grid > .grid__col--pull-1-of-6 {
  margin-left: -16.66667%;
}

.grid > .grid__col--5-of-6 {
  width: 83.33333%;
}

.grid > .grid__col--push-5-of-6 {
  margin-left: 83.33333%;
}

.grid > .grid__col--pull-5-of-6 {
  margin-left: -83.33333%;
}

.grid > *,
.grid > .grid__col--1-of-6,
.grid > .grid__col--push-1-of-6,
.grid > .grid__col--pull-1-of-6,
.grid > .grid__col--2-of-6,
.grid > .grid__col--push-2-of-6,
.grid > .grid__col--pull-2-of-6,
.grid > .grid__col--3-of-6,
.grid > .grid__col--push-3-of-6,
.grid > .grid__col--pull-3-of-6,
.grid > .grid__col--4-of-6,
.grid > .grid__col--push-4-of-6,
.grid > .grid__col--pull-4-of-6,
.grid > .grid__col--5-of-6,
.grid > .grid__col--push-5-of-6,
.grid > .grid__col--pull-5-of-6,
.grid > .grid__col--6-of-6,
.grid > .grid__col--push-6-of-6,
.grid > .grid__col--pull-6-of-6,
.grid > .grid__col--6-of-6 {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  display: inline-block;
  margin-right: -.25em;
  min-height: 1px;
  padding-left: 20px;
  vertical-align: top;
}

@media screen and (max-width: 700px) {
  .grid > *,
  .grid > .grid__col--1-of-6,
  .grid > .grid__col--push-1-of-6,
  .grid > .grid__col--pull-1-of-6,
  .grid > .grid__col--2-of-6,
  .grid > .grid__col--push-2-of-6,
  .grid > .grid__col--pull-2-of-6,
  .grid > .grid__col--3-of-6,
  .grid > .grid__col--push-3-of-6,
  .grid > .grid__col--pull-3-of-6,
  .grid > .grid__col--4-of-6,
  .grid > .grid__col--push-4-of-6,
  .grid > .grid__col--pull-4-of-6,
  .grid > .grid__col--5-of-6,
  .grid > .grid__col--push-5-of-6,
  .grid > .grid__col--pull-5-of-6,
  .grid > .grid__col--6-of-6,
  .grid > .grid__col--push-6-of-6,
  .grid > .grid__col--pull-6-of-6,
  .grid > .grid__col--6-of-6 {
    display: block;
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    width: auto;
  }
}

.grid .grid__col--centered {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@media screen and (max-width: 700px) {
  .grid {
    margin-left: 0;
    width: auto;
  }
}

.grid .grid__col--d-first {
  float: left;
}

.grid .grid__col--d-last {
  float: right;
}

.grid.grid--no-gutter {
  margin-left: 0;
  width: 100%;
}

.grid.grid--no-gutter > * {
  padding-left: 0;
}

.grid.grid--no-gutter .grid__col--span-all {
  margin-left: 0;
  width: 100%;
}

.grid .grid__col--ab {
  vertical-align: bottom;
}

.grid .grid__col--am {
  vertical-align: middle;
}

.wrap {
  max-width: 960px;
  max-width: 48rem;
  margin: 0 auto;
}

body {
  padding: 28px;
  padding: 1.4rem;
}

.island {
  padding: 28px;
  padding: 1.4rem;
}

.island--v {
  padding-top: 28px;
  padding-top: 1.4rem;
  padding-bottom: 28px;
  padding-bottom: 1.4rem;
}

.isle {
  padding: 14px;
  padding: 0.7rem;
}

.isle--v,
.site__footer section {
  padding-top: 14px;
  padding-top: 0.7rem;
  padding-botton: 14px;
  padding-botton: 0.7rem;
}

.spit {
  padding: 7px;
  padding: 0.35rem;
}

.spit--v,
.site__nav a {
  padding-top: 7px;
  padding-top: 0.35rem;
  padding-bottom: 7px;
  padding-bottom: 0.35rem;
}

/*-----------------------------------*\

  Partial: objects

  Abstractions that can't be categorised
  anywhere else

\*-----------------------------------*/

.nav,
.nav ul,
.nav ol {
  list-style: none;
  padding-left: 0;
}

.nav li,
.nav a,
.nav ul li,
.nav ul a,
.nav ol li,
.nav ol a {
  display: inline-block;
}

/*-----------------------------------*\

  Partial: typography

  Type styles

\*-----------------------------------*/

h1,
.alpha {
  font-family: "Requiem Display A", "Requiem Display B", "Hoefler Text A", "Hoefler Text B", Georgia, serif;
  font-weight: 400;
  font-size: 36px;
  font-size: 1.8rem;
  line-height: 1.166666667;
}

h1 .caps,
.alpha .caps {
  font-family: "Requiem Display SC A", "Requiem Display SC B", "Requiem Display A", "Requiem Display B", "Hoefler Text A", "Hoefler Text B", Georgia, serif;
}

h2,
.beta {
  font-size: 24px;
  font-size: 1.2rem;
  font-weight: 400;
  font-style: italic;
  line-height: 1.166666667;
}

* + h2,
* + .beta {
  padding-top: 28px;
  padding-top: 1.4rem;
}

h3,
.gamma {
  margin-bottom: 14px;
  margin-bottom: .7rem;
  font-family: "Hoefler Text SC A", "Hoefler Text SC B", "Hoefler Text A", "Hoefler Text B", Georgia, serif;
  font-size: 20px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.4;
  letter-spacing: .05em;
}

h4,
.delta {
  margin-bottom: 14px;
  margin-bottom: .7rem;
  font-family: "Whitney SSm SC A", "Whitney SSm SC B", "Whitney SSm A", "Whitney SSm B", Geneva, Verdana, san-serif;
  font-size: 12px;
  font-size: .6rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: .05em;
}

small,
.small,
figcaption,
.site__nav {
  font-size: 14px;
  font-size: .7rem;
  line-height: 1.357142857;
}

.meta {
  color: #888888;
}

.caps {
  font-family: "Hoefler Text SC A", "Hoefler Text SC B", "Hoefler Text A", "Hoefler Text B", Georgia, serif;
}

a {
  color: inherit;
}

a:hover {
  color: #c64f52;
}

figcaption,
.site__nav {
  font-family: "Whitney SSm A", "Whitney SSm B", Geneva, Verdana, san-serif;
  color: #888888;
}

figcaption .caps,
.site__nav .caps {
  font-family: "Whitney SSm SC A", "Whitney SSm SC B", "Whitney SSm A", "Whitney SSm B", Geneva, Verdana, san-serif;
}

hr {
  border: none;
  border-bottom: 2px solid #d0d2d4;
  width: 120px;
  width: 6rem;
  padding-top: 42px;
  padding-top: 2.1rem;
  margin-top: -2px;
  margin-right: auto;
  margin-bottom: 56px;
  margin-bottom: 2.8rem;
  margin-left: auto;
}

/*-----------------------------------*\

  Partial: images

  Sprite and image helpers should go here

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: tables

  Table styling

\*-----------------------------------*/

/*-----------------------------------*\

  Partial: forms

  Form & form element styles

\*-----------------------------------*/

.debug-outline * {
  outline: 1px dotted rgba(0, 0, 0, 0.1);
  outline-offset: -1px;
}

.debug-outline *:hover {
  outline-color: red;
}

/*-----------------------------------*\

  Partial: animations

  Animation definitions

\*-----------------------------------*/

/*-----------------------------------*\

    Partial: debug

    Helpers for layout debugging, etc.

  \*-----------------------------------*/

.debug-outline * {
  outline: 1px dotted rgba(0, 0, 0, 0.1);
  outline-offset: -1px;
}

.debug-outline *:hover {
  outline-color: red;
}

/*-----------------------------------*\

  Module: all

  Imports modules. Modules are site-
  and page-specific styles that cannot
  be easily abstracted.

\*-----------------------------------*/

/*-----------------------------------*\

  Module: base

  High-level styles. Basically just
  the html/:root element.

\*-----------------------------------*/

html,
:root {
  font: 125%/1.4 "Hoefler Text A", "Hoefler Text B", Georgia, serif;
}

/*-----------------------------------*\

  Module: code

  Code highlighting styles

\*-----------------------------------*/

/*-----------------------------------*\

  Module: header

  High-level styles for the header

\*-----------------------------------*/

.site__title {
  text-decoration: none;
}

.site__title:hover {
  color: inherit;
}

.site__title span {
  margin-bottom: 0;
}

.site__nav {
  font-family: "Whitney SSm SC A", "Whitney SSm SC B", "Whitney SSm A", "Whitney SSm B", Geneva, Verdana, san-serif;
  letter-spacing: .05em;
  border-top: 1px solid #d0d2d4;
}

.site__nav li {
  margin-top: -1px;
}

.site__nav li + li {
  margin-left: 20px;
  margin-left: 1rem;
}

.site__nav a {
  text-decoration: none;
  color: #888888;
  border-top: 1px solid transparent;
}

.site__nav a.active {
  color: #c64f52;
  border-top-color: #c64f52;
}

.site__nav a:hover {
  color: #c64f52;
}

/*-----------------------------------*\

  Module: content

  High-level styles for the main
  content

\*-----------------------------------*/

.posts__list .beta {
  margin-bottom: 0;
}

.posts__list a {
  text-decoration: none;
}

.post__title {
  margin-bottom: 0;
}

p:empty {
  display: none;
}

.hentry {
  margin-bottom: 84px;
  margin-bottom: 4.2rem;
}

/*-----------------------------------*\

  Module: footer

  High-level styles for the footer

\*-----------------------------------*/

.site__footer {
  border-top: 1px solid #d0d2d4;
}

.site__footer section {
  position: static;
}

.site__footer section + section:before {
  content: "";
  position: absolute;
  width: 1px;
  margin-left: -10px;
  top: 0;
  bottom: 0;
  background-color: #d0d2d4;
}

/*===================================*\

  Sass Authoring Rules
  --------------------

  Some basic guidelines (that may be broken) for authoring manageable, readable Sass styles:

  .block {
    // 1. Layout Properties
    // display, width, padding, margin, vertical-align, box-sizing, etc.
    // Note: Bracketed expression values — such as calc() or linear-gradient() — must have spaces [e.g. calc( 100% + 2rem )] for Grunt tasks to run properly

    // 2. Typography Properties
    // font[-size, -weight, etc], line-height, text-align, letter-spacing, white-space, etc.

    // 3. Appearance Properties
    // color, box-shadow, background, border, text-shadow, opacity, etc.

    // 4. UI Properties
    // appearance, cursor, pointer-events, etc.

    // Child elements are not always (and shouldn't be) nested in the parent block
    .block__child {

      // Modifiers are almost always nested in their parent element
      &.block__child--modifier {

      }

      &:after {
        // `content` counts as a layout property
      }

    }
  }

  Full Example:

  .block {
    width: 100%;

    font-size: 1rem;
    font-weight: 400;

    color: $highlight;

    .block__child {
      display: inline-block;

      &.block__child--modifier {
        color: $gray;
      }

      &:after {
        content: '';
        padding: 1.5rem;

        cursor: pointer;
      }
    }
  }

  If you want to pick a fight over/learn more about these rules, let me know – dan.eden@me.com

\*===================================*/